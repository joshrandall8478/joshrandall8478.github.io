---
// pages/blog/[...page].astro
// https://docs.astro.build/en/core-concepts/routing/#pagination
import '../../styles/blog-list.scss';
import Layout from '../../layouts/MainLayout.astro';
export async function getStaticPaths({ paginate }) {
  // Generate pages from our array of astronauts, with 2 to a page
  const allPosts = await Astro.glob('../posts/*.md');
    const nonDraftPosts = allPosts.filter((post) => !post.frontmatter.draft && !post.frontmatter.unlisted)
    nonDraftPosts.sort((a, b) => Date.parse(b.frontmatter.date) - Date.parse(a.frontmatter.date));
  return paginate(nonDraftPosts, { pageSize: 4 });
}
import Pagination from '../../components/Pagination.astro';
// All paginated data is passed on the "page" prop
const currentPath = Astro.url.pathname;
const { page } = Astro.props;
const { prev, next} = page.url;

---

<Layout title="Posts" currentPath={currentPath}>
        <section>
            <div class="container">
                <div class="content">
                <ul class="blog__list">
                    {page.data.map((post) => <li>
                    <a href={post.url}>
                    <div class="blog__item">
                        <div>
                        <h2>
                            {post.frontmatter.title}
                        </h2>
                        <h3>
                            Date: {post.frontmatter.date}
                        </h3>
                        <h4>
                            Author: {post.frontmatter.author}
                        </h4>
                        <p>
                            {post.frontmatter.description}
                            </p>
                        </div>
                        <div>
                            <img src={post.frontmatter.image.url} alt={post.frontmatter.image.alt}>
                        </div>
                        </div>
                    </a>
                    </li>
                    )}
                    </ul>
                </div>
            </div>
<Pagination 
    length={page.lastPage} 
    currentUrl={page.url.current} 
    currentPage={page.currentPage} 
    firstUrl="/posts" 
    prevUrl={prev} 
    nextUrl={next} 
    lastUrl={"/posts/" + page.lastPage}
/>
        </section>

    
</Layout>
